{% from 'ksso/macros.jinja' import name %}
{% from 'board/macros.jinja' import make_tag %}

<style>
  .col {
    margin-right: 7px;
  }
  .page-controller {
    display: flex;
  }
  
  .canvas-container {
    display: flex;
  }
  
  /*
  .page-item {
    max-width: 1500px;
  }
  */
  .well {
    padding: 0;
    border-radius: 0;
    border-left: 0;
    border-right: 0;
  }
</style>

<div id="post-content">
  {% if posts.object_list and posts.object_list[0].attachedfile_set.all() %}
    <div class="page-controller row">
      <div class="col">
          <button id="pdf-prev" type="button" class="btn" onclick="goToPrevPage()">이전</button>
      </div>
      <div class="col">
          <button id="pdf-next" type="button" class="btn" onclick="goToNextPage()">다음</button>
      </div>
      <div class="col">
          <input type="text" size="6" class="form-control" id="pdf-page-num" value="1">
      </div>
      <div class="col">
          <button id="pdf-go-to-page" type="button" class="btn col" onclick="goToInputPage()">페이지로 이동</button>
      </div>
    </div>
      
    <div class="canvas-container row well">
      <canvas id="the-canvas"></canvas>
      <canvas id="the-canvas-2"></canvas>
    </div>
  {% else %}
      공약 및 정책자료집이 업로드 되지 않았습니다.
  {% endif %}
</div>

<div id="board-func" class="row">
  <div class="pull-right col-sm-1">
    {% if board.is_permitted(request.user, PERM_WRITE) %}
        <a href="{{current_path}}/new/" class="btn btn-primary">{{ _('업로드') }}</a>
    {% endif %}
  </div>
</div>

<script src="{{ static('js/pdf.js') }}"></script>

{% if posts.object_list and posts.object_list[0].attachedfile_set.all() %}
<script type="text/javascript">

var url = "{{ posts.object_list[0].attachedfile_set.all()[0].get_absolute_url() }}";

var currentPdf;

function renderPage(pageIndex) {
  if (pageIndex > currentPdf.numPages || pageIndex < 1) {
    return;
  }
  currentPdf.getPage(pageIndex)
    .then(function(page) {

      var canvas = pageIndex % 2 === 1 ? document.getElementById('the-canvas') : document.getElementById('the-canvas-2');

      var canvasContainer = document.getElementsByClassName('canvas-container')[0]
      var canvasWidth = canvasContainer.offsetWidth / 2;
      
      var viewport = page.getViewport(canvasWidth / page.getViewport(1.0).width);

      var context = canvas.getContext('2d');

      canvas.height = viewport.height;
      canvas.width = viewport.width;
      
      var renderContext = {
        canvasContext: context,
        viewport: viewport
      };
    
      page.render(renderContext);
    })
    .catch(function (e) {
      console.log(e);
    });
}

function goToPage(pageIndex) {
  pageIndex = pageIndex % 2 === 0 ? pageIndex-1 : pageIndex;
  document.getElementById('pdf-page-num').value = pageIndex;
  renderPage(pageIndex)
  renderPage(pageIndex+1)
}

function goToInputPage() {
  var currentPageIndex = Number(document.getElementById('pdf-page-num').value);
  goToPage(currentPageIndex);
}

function goToPrevPage() {
  var currentPageIndex = Number(document.getElementById('pdf-page-num').value);
  if (currentPageIndex > 1) {
    goToPage(--currentPageIndex);
  }
}

function goToNextPage() {
  var currentPageIndex = Number(document.getElementById('pdf-page-num').value);
  if (currentPageIndex % 2 === 1) {
    currentPageIndex++;
  }
  if (currentPageIndex < currentPdf.numPages) {
    currentPageIndex++;
    goToPage(currentPageIndex);
  }
}

// Asynchronous download PDF
PDFJS.getDocument(url)
  .then(function(pdf) {
    currentPdf = pdf;
    goToPage(1);
  })

</script>
{% endif %}

