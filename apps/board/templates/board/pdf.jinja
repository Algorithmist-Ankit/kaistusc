{% extends 'manager/app_base.jinja' %}

{% from 'ksso/macros.jinja' import name %}
{% from 'board/macros.jinja' import make_tag %}

{% block content %}
<link href="{{ static('css/text_layer_builder.css') }}" rel="stylesheet">
<style>
  .canvas-container {
    display: flex;
  }
  .page-item {
    max-width: 1500px;
  }
</style>
<div id="post-wrap">

  <div id="post-content">
    <button id="pdf-prev" type="button" class="btn" onclick="goToPrevPage()">이전</button>
    <button id="pdf-next" type="button" class="btn" onclick="goToNextPage()">다음</button>
    <input type="text" class="form-control" id="pdf-page-num" value="1">
    <button id="pdf-go-to-page" type="button" class="btn" onclick="goToInputPage()">페이지로 이동</button>
    <div class="canvas-container">
      <canvas id="the-canvas"></canvas>
      <canvas id="the-canvas-2"></canvas>
    </div>
  </div>

  <div id="post-func">
    <div class="pull-right">
      {% if board.is_permitted(request.user, PERM_WRITE) %}
        <a href="{{ board.get_absolute_url() }}/new/" class="btn btn-primary">{{ _('글쓰기') }}</a>
      {% endif %}
    </div>
  </div>

</div>

<script src="{{ static('js/pdf.js') }}"></script>
<!-- <script src="{{ static('js/text_layer_builder.js') }}"></script> -->
<script type="text/javascript">

var url = "{{ files[0].get_absolute_url() }}";

var currentPdf;

function renderPage(pageIndex) {
  if (pageIndex > currentPdf.numPages || pageIndex < 1) {
    return;
  }
  currentPdf.getPage(pageIndex)
    .then(function(page) {

      var scale = 1.0;
      
      var viewport = page.getViewport(scale);

      var canvas = pageIndex % 2 === 1 ? document.getElementById('the-canvas') : document.getElementById('the-canvas-2');

      var context = canvas.getContext('2d');

      canvas.height = viewport.height;
      canvas.width = viewport.width;
      
      var renderContext = {
        canvasContext: context,
        viewport: viewport
      };
    
      page.render(renderContext);
    })
    .catch(function (e) {
      console.log(e);
    });
}

function goToPage(pageIndex) {
  pageIndex = pageIndex % 2 === 0 ? pageIndex-1 : pageIndex;
  document.getElementById('pdf-page-num').value = pageIndex;
  renderPage(pageIndex)
  renderPage(pageIndex+1)
}

function goToInputPage() {
  var currentPageIndex = Number(document.getElementById('pdf-page-num').value);
  goToPage(currentPageIndex);
}

function goToPrevPage() {
  var currentPageIndex = Number(document.getElementById('pdf-page-num').value);
  if (currentPageIndex > 1) {
    goToPage(--currentPageIndex);
  }
}

function goToNextPage() {
  var currentPageIndex = Number(document.getElementById('pdf-page-num').value);
  if (currentPageIndex < currentPdf.numPages) {
    currentPageIndex += 2;
    goToPage(currentPageIndex);
  }
}

// Asynchronous download PDF
PDFJS.getDocument(url)
  .then(function(pdf) {
    currentPdf = pdf;
    goToPage(1);
  })
</script>

{% endblock %}
